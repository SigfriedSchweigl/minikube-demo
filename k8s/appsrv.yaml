apiVersion: apps/v1
kind: Deployment
metadata:
 name: appsrv

spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: appsrv
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: appsrv
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:14
          command: ['sh', '-c', 'until pg_isready -h postgres -p 5432; do echo waiting for database; sleep 2; done;']
      containers:
      - image: ghcr.io/sigfriedschweigl/backend:latest
        imagePullPolicy: Always
        name: backend
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-03-14T07:41:09Z"
    lastUpdateTime: "2024-03-14T07:41:09Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-03-14T07:40:09Z"
    lastUpdateTime: "2024-03-14T07:41:09Z"
    message: ReplicaSet "appsrv-68d74c7496" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: Service
metadata:
  name: appsrv

spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    component: appsrv